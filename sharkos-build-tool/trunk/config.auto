

###############################################################################
#    (C) 2012 hyperclock (aka Jimmy M. Coleman)
#	 website:  www.shark-os.tk
#	 email:    hyperclock(at)sharkos-os(dot)tk
#	 git:	   https://github.com/hyperclock/sharkos-build-tool
# 
###############################################################################
###############################################################################
#    sharkos-build-tool - Scripts designed to build SharkOS based on Debian.
#
#    sharkos-build-tool is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    sharkos-build-tool is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy (see docs/gpl-3.0.txt) of the GNU General 
#    Public License along with sharkos-build-tool.  If not, see 
#    <http://www.gnu.org/licenses/>.
#
################################################################################
########################### Original Info ###################################### 
#
#    Copyright (C) 2009  Karl Goetz
#
#    Original License: GPLv2
#
################################################################################


# ---------------------------------------------------------------------------
# DO NOT EDIT THIS FILE
# It exists to set a number of variables automatically according to
# preferences in config and config.
# ---------------------------------------------------------------------------

# Which extras (aka variant) to build
if [ 1 == $UPDATES ]; then EXTRAS="-updates"; fi
if [ 1 == $BACKPORTS ]; then EXTRAS="$EXTRAS -backports"; fi

# What arch are we building? Defaults to i386 is nothing specified
# via the calling environment
# Currently, valid strings are "amd64" and "i386"
if [ -z $BUILDARCH ]; then
	BUILDARCH="amd64"
fi

# This sets variables for different sections of builder to use based on the
# $BUILDARCH variable from above
# Using case to be a little forgiving about input
case $BUILDARCH in
	386 | i386 | I386 | ia32 | IA32)
		export GNS_HOST_ARCH="i386";
		export KERNELARCH="386";
		export DPKGOPTS='-rfakeroot -e"$MAINTINFO" -m"$MAINTINFO" -us -uc -ai386';
	;;
	amd64 | AMD64)
		export GNS_HOST_ARCH="amd64";
		export KERNELARCH="amd64";
		export DPKGOPTS='-rfakeroot -e"$MAINTINFO" -m"$MAINTINFO" -us -uc -B -aamd64';
	;;
	*)
	echo -e "\n\nERROR\! invalid arch\!\n\n"
	exit 1
	;;
esac

case $(tr A-Z a-z <<<$MIRRORDIST) in
	"wheezy")
		export KERNEL_RELEASE="3.2.0"
		;;
	*)
		exit 1
		;;
esac
