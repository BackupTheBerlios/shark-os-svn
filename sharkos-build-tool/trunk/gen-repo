#!/bin/bash

###############################################################################
#    (C) 2012 hyperclock (aka Jimmy M. Coleman)
#	 website:  www.shark-os.tk
#	 email:    hyperclock(at)sharkos-os(dot)tk
#	 git:	   https://github.com/hyperclock/sharkos-build-tool
# 
###############################################################################
###############################################################################
#    sharkos-build-tool - Scripts designed to build SharkOS based on Debian.
#
#    sharkos-build-tool is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    sharkos-build-tool is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy (see docs/gpl-3.0.txt) of the GNU General 
#    Public License along with sharkos-build-tool.  If not, see 
#    <http://www.gnu.org/licenses/>.
#
################################################################################
########################### Original Info ###################################### 
#
#    Copyright (C) ?
#
#    Original License: GPLv2
#
################################################################################



# Get distro information
. config

# Hard link Ubuntu mirror and $REPODST
mkdir -p $REPODST/conf
# cp -aul $MIRRORLOCAL/* $REPODST/

cd $REPODST

cat >  conf/distributions <<EOF

Origin: $DISTRONAME
Label: $DISTRONAME
Codename: $RELEASE
Update: Upstream Upstream-mate       # Upstream-trinity Upstream-trinitybd
Architectures: $ALL_REPO_ARCHES source
Components: main community bound
UDebComponents: main
SignWith: $SIGNINGKEY
DscIndices: Sources Release . .gz
#DebOverride: override.$RELEASE.bin
#UDebOverride: override.$RELEASE.bin
#DscOverride: override.$RELEASE.src

#Origin: $DISTRONAME
#Label: $DISTRONAME
#Codename: ${RELEASE}-security
#Update: Upstream-security
#Architectures: $ALL_REPO_ARCHES source
#Components: main community bound
##UDebComponents: main
#SignWith: $SIGNINGKEY
#DscIndices: Sources Release . .gz
##DebOverride: override.$RELEASE-security.bin
##UDebOverride: override.$RELEASE-security.bin
##DscOverride: override.$RELEASE-security.src

Origin: $DISTRONAME
Label: $DISTRONAME
Codename: ${RELEASE}-media
Update: Upstream-media 
Architectures: $ALL_REPO_ARCHES source
Components: main bound
SignWith: $SIGNINGKEY
DscIndices: Sources Release . .gz
#DebOverride: override.$RELEASE.bin
#UDebOverride: override.$RELEASE.bin
#DscOverride: override.$RELEASE.src
EOF

cat >  conf/updates <<EOF
Name: Upstream
Method: $MIRROR
Suite: $MIRRORDIST
Components: main>main contrib>community non-free>bound
#FilterList: install purge-hardy
#FilterFormula: Priority (==required)
VerifyRelease: blindtrust

Name: Upstream-security
Method: $MIRROR
Suite: ${MIRRORDIST}-security
Components: main>main contrib>community non-free>bound
#FilterList: install purge-hardy
#FilterFormula: Priority (==required)
VerifyRelease: blindtrust

Name: Upstream-media
Method: $MEDIA_MIRROR
Suite: $MEDIA_MIRRORDIST
Components: free>main non-free>restricted
#FilterList: install purge-hardy
#FilterFormula: Priority (==required)
VerifyRelease: blindtrust

Name: Upstream-mate
Method: $MATE_MIRROR
Suite: $MATE_MIRRORDIST
Components: main>main
#FilterList: install purge-hardy
#FilterFormula: Priority (==required)
VerifyRelease: blindtrust

Name: Upstream-trinity
Method: $TRINITY_MIRROR
Suite: $TRINITY_MIRRORDIST
Components: main>main
#FilterList: install purge-hardy
#FilterFormula: Priority (==required)
VerifyRelease: blindtrust

Name: Upstream-trinitybd
Method: $TRINITYBD_MIRROR
Suite: $TRINITYBD_MIRRORDIST
Components: main>main
#FilterList: install purge-hardy
#FilterFormula: Priority (==required)
VerifyRelease: blindtrust

EOF

if [ 1 == $UPDATES ]; then
cat >> conf/updates <<EOF

Name: Upstream-updates
Method: $MIRROR
Suite: ${MIRRORDIST}-updates
Components: main>main contrib>community non-free>bound
#FilterList: install purge-hardy
#FilterFormula: Priority (==required)
VerifyRelease: blindtrust
EOF

cat >>  conf/distributions <<EOF

Origin: $DISTRONAME
Label: $DISTRONAME
Codename: $RELEASE-updates
Update: Upstream-updates
Architectures: $ALL_REPO_ARCHES source
Components: main community bound
#UDebComponents: main
SignWith: $SIGNINGKEY
DscIndices: Sources Release . .gz
#DebOverride: override.$RELEASE-updates.bin
#UDebOverride: override.$RELEASE-updates.bin
#DscOverride: override.$RELEASE-updates.src
EOF
fi

if [ 1 == $BACKPORTS ]; then
cat >> conf/updates <<EOF

Name: Upstream-backports
Method: $MIRROR
Suite: ${MIRRORDIST}-backports
Components: main>main
#FilterList: install purge-hardy
#FilterFormula: Priority (==required)
VerifyRelease: blindtrust
EOF

cat >>  conf/distributions <<EOF

Origin: $DISTRONAME
Label: $DISTRONAME
Codename: $RELEASE-backports
Update: Upstream-backports
Architectures: $ALL_REPO_ARCHES source
Components: main community bound
#UDebComponents: main
SignWith: $SIGNINGKEY
DscIndices: Sources Release . .gz
#DebOverride: override.$RELEASE-backports.bin
#UDebOverride: override.$RELEASE-backports.bin
#DscOverride: override.$RELEASE-backports.src
EOF
fi;


mkdir -p $REPODST/cdimage
mkdir -p $REPODST/apt/{var,lists/partial,cache/archives/partial}
touch $REPODST/apt/status
touch conf/purge-$MIRRORDIST
