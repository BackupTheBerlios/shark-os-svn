#!/bin/sh

###############################################################################
#    (C) 2012 hyperclock (aka Jimmy M. Coleman)
#	 website:  www.shark-os.tk
#	 email:    hyperclock(at)sharkos-os(dot)tk
#	 git:	   https://github.com/hyperclock/sharkos-build-tool
# 
###############################################################################
###############################################################################
#    sharkos-build-tool - Scripts designed to build SharkOS based on Debian.
#
#    sharkos-build-tool is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    sharkos-build-tool is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy (see docs/gpl-3.0.txt) of the GNU General 
#    Public License along with sharkos-build-tool.  If not, see 
#    <http://www.gnu.org/licenses/>.
#
################################################################################
########################### Original Info ###################################### 
#
#    Copyright (C) 2008 - 2010  Rub√©n Rodriguez <ruben@gnu.org>
#
#    Original License: GPLv3
#
################################################################################


# $1 = non-free package to remove

SOURCE=$1
# FIXME: hard coding is bad.
REPOS="deltah deltah-security deltah-updates deltah-backports"

do
    ls $BASEDIR/pool/*/*/${SOURCE}/ > /dev/null 2>&1 || continue
    echo Found $SOURCE directory
    for package in $(ls -1 $BASEDIR/pool/*/*/${SOURCE}/* 2>/dev/null | awk -F '/' '{print $5}'|awk -F '_' '{print $1}'|sort -u  )
    do
        echo Found $package package
        for repo in $REPOS
        do
            if $TEST reprepro -v remove $repo $package 2>&1 | grep -q "Not removed"
            then
                echo E: Not in $repo
            else
                echo Blacklisting $package
                echo "$package purge" >> conf/purge-$DIST
            fi
        done
     done
done

echo Sorting blacklist
sort -u < conf/purge-$DIST > /tmp/purge-$DIST
mv /tmp/purge-$DIST conf/purge-$DIST
